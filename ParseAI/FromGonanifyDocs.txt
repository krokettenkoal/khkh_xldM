Hi to lo ->
FEDCBA9876 54 3210
----- opc typ pushOp
0000000000 00 0000 u32: PUSH.V ri

0000000011 10 0000 u16: PUSH.L la
00000000rr 10 0000 u16: PUSH.AP rn, ri

00000000rr 11 0000 u16: PUSH.A rn, ri

// push val
0000000000 10 0000 u16: PUSH.L sp +val
0000000001 10 0000 u16: PUSH.L wp +val
0000000010 10 0000 u16: PUSH.L *sp +val
0000000011 10 0000 u16: PUSH.L top +val*2

// push *val
0000000000 11 0000 u16: PUSH.AP sp +val
0000000001 11 0000 u16: PUSH.AP wp +val
0000000010 11 0000 u16: PUSH.AP *sp +val
0000000011 11 0000 u16: PUSH.AP top +val*2

----- opc typ popOp
00000000rr 00 0001 u16: POP.A rn, ri
0000000011 00 0001 u16: POP.L la

----- opc int unaryOp
0000000000 00 0101: CFTI
0000000010 00 0101: NEG
0000000011 00 0101: INV
0000000100 00 0101: EQZ
0000000101 00 0101: ABS
0000000110 00 0101: MSB
0000000111 00 0101: INFO
0000001001 00 0101: NEQZ
0000001010 00 0101: MSBI
0000001011 00 0101: IPOS

----- opc flt unaryOp
0000000000 01 0101: CITF
0000000010 01 0101: NEGF
0000000101 01 0101: ABSF
0000000110 01 0101: INFZF
0000000111 01 0101: INFOEZF
0000001000 01 0101: EQZF
0000001001 01 0101: NEQZF
0000001010 01 0101: SUPOEZF
0000001011 01 0101: SUPZF

----- opc int binaryOp
0000000000 00 0110: ADD
0000000001 00 0110: SUB
0000000010 00 0110: MUL
0000000011 00 0110: DIV
0000000100 00 0110: MOD
0000000101 00 0110: AND
0000000110 00 0110: OR
0000000111 00 0110: XOR
0000001000 00 0110: SLL
0000001001 00 0110: SRA
0000001010 00 0110: EQZV
0000001011 00 0110: NEQZV

----- opc flt binaryOp
0000000000 01 0110: ADDF
0000000001 01 0110: SUBF
0000000010 01 0110: MULF
0000000011 01 0110: DIVF
0000000100 01 0110: MODF

0000000000 00 0111: ?
0000000001 00 0111: ?
0000000010 00 0111: ?

iiiiiiiiii 00 1000  aaaaaaaaaaaaaaaa: JMP ri, addr

ii00000000 00 1001: EXIT ri
0000000001 00 1001: ?
0000000010 00 1001: RET
0000000011 00 1001: PUSH.CA
0000000101 00 1001: PUSH.C
0000000110 00 1001: SIN
0000000111 00 1001: COS
0000001000 00 1001: DEGR
0000001001 00 1001: RADD

00000000ii 00 1010 aaaaaaaaaaaaaaaa: SYSCALL ri, ra
<- Hi to lo
